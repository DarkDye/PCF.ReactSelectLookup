<?xml version="1.0" encoding="utf-8"?>
<manifest>
  <control namespace="ReactSelectLookup.PCF.Control" constructor="ReactSelectLookup" version="0.0.28" display-name-key="ReactSelectLookup" description-key="ReactSelectLookup description" control-type="standard">
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property name="lookupfield" display-name-key="Lookup Field" description-key="Lookup field to render as react-select" of-type="Lookup.Simple" usage="bound" required="true" />
    <property name="fetchxml" display-name-key="Fetch XML filter lookup" description-key="Enter a valid FetchXML to filter lookup field" of-type="Multiple" usage="input" required="true" />
    <property name="idValueLookup" display-name-key="Id Value attribute" description-key="Enter valid id schema name (new_entityid)" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="textValueLookup" display-name-key="Text Value Attribute" description-key="Enter valid text schema name (new_name)" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="loadingMessage" display-name-key="Text loading message" description-key="Enter loading label to display" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="noOptionsMessage" display-name-key="Text no options Message" description-key="Enter no options label to display" of-type="SingleLine.Text" usage="input" required="true" />
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/ReactSelectLookup.css" order="1" />
      <resx path="strings/ReactSelectLookup.1033.resx" version="1.0.0" />
      -->
    </resources>
    <feature-usage>
      <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
    -->
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
  </control>
</manifest>